import urllib.request
from .datetimes import _parse_date as _parse_date
from .urls import convert_to_idn as convert_to_idn
from typing import Any, Optional

class urllib:
    class parse:
        splithost: Any = ...
        splittype: Any = ...
        splituser: Any = ...
        urlparse: Any = ...
    class request:
        build_opener: Any = ...
        HTTPDigestAuthHandler: Any = ...
        HTTPRedirectHandler: Any = ...
        HTTPDefaultErrorHandler: Any = ...
        Request: Any = ...

_base64decode: Any
basestring = str
bytes_: Any
ACCEPT_HEADER: str

class _FeedURLHandler(urllib.request.HTTPDigestAuthHandler, urllib.request.HTTPRedirectHandler, urllib.request.HTTPDefaultErrorHandler):
    def http_error_default(self, req: Any, fp: Any, code: Any, msg: Any, headers: Any): ...
    def http_error_301(self, req: Any, fp: Any, code: Any, msg: Any, hdrs: Any): ...
    http_error_300: Any = ...
    http_error_302: Any = ...
    http_error_303: Any = ...
    http_error_307: Any = ...
    def http_error_401(self, req: Any, fp: Any, code: Any, msg: Any, headers: Any): ...

def _build_urllib2_request(url: Any, agent: Any, accept_header: Any, etag: Any, modified: Any, referrer: Any, auth: Any, request_headers: Any): ...
def get(url: Any, etag: Optional[Any] = ..., modified: Optional[Any] = ..., agent: Optional[Any] = ..., referrer: Optional[Any] = ..., handlers: Optional[Any] = ..., request_headers: Optional[Any] = ..., result: Optional[Any] = ...): ...
