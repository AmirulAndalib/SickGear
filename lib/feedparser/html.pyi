import sgmllib3k as sgmllib
from typing import Any, Optional

_cp1252: Any

class _BaseHTMLProcessor(sgmllib.SGMLParser):
    special: Any = ...
    bare_ampersand: Any = ...
    elements_no_end_tag: Any = ...
    encoding: Any = ...
    _type: Any = ...
    pieces: Any = ...
    def __init__(self, encoding: Optional[Any] = ..., _type: str = ...) -> None: ...
    def reset(self) -> None: ...
    def _shorttag_replace(self, match: Any): ...
    def goahead(self, i: Any) -> None: ...
    def __parse_starttag(self, i: Any) -> None: ...
    def parse_starttag(self, i: Any): ...
    def feed(self, data: Any) -> None: ...
    @staticmethod
    def normalize_attrs(attrs: Any): ...
    def unknown_starttag(self, tag: Any, attrs: Any) -> None: ...
    def unknown_endtag(self, tag: Any) -> None: ...
    def handle_charref(self, ref: Any) -> None: ...
    def handle_entityref(self, ref: Any) -> None: ...
    def handle_data(self, text: Any) -> None: ...
    def handle_comment(self, text: Any) -> None: ...
    def handle_pi(self, text: Any) -> None: ...
    def handle_decl(self, text: Any) -> None: ...
    _new_declname_match: Any = ...
    def _scan_name(self, i: Any, declstartpos: Any): ...
    @staticmethod
    def convert_charref(name: Any): ...
    @staticmethod
    def convert_entityref(name: Any): ...
    def output(self): ...
    def parse_declaration(self, i: Any): ...
